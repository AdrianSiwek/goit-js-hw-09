{"mappings":"gfAAA,IASuBA,EAAUC,EATjCC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SACpBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAExCF,EAAKG,iBAAiB,SAAUC,gBAETR,EAgBT,EAhBmBC,EAgBhB,KAfR,IAAIQ,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACV,WAAUC,UAGnBU,EAAO,CAACX,WAAUC,S,GAGnBA,E,KAMJc,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBC,EAAAe,OAAOC,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAE9DmB,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBC,EAAAe,OAAOI,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inDelay = document.querySelector('input[name=\"delay\"]');\nconst inStep = document.querySelector('input[name=\"step\"]');\nconst inAmount = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', submitHandler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n        // Fulfill\n      } else {\n        reject({position, delay})\n        // Reject\n      }\n    }, delay)\n  });\n}\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["position","delay","$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","submitHandler","Promise","resolve","reject","setTimeout","Math","random","then","param","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.e2bb6b0d.js.map"}