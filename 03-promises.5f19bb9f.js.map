{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAIxC,IAAuBC,EAAUC,EAFjCJ,EAAKK,iBAAiB,SAAUC,gBAETH,EAgBT,EAhBmBC,EAgBhB,KAfR,IAAIG,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACL,E,MAAUC,IAGnBK,EAAO,C,SAACN,E,MAAUC,GAAO,GAG1BA,EAAM,KAMVS,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBN,EAAAgB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAAU,IAEhEY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBN,EAAAgB,OAAOG,QAAQ,sBAAoBd,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inDelay = document.querySelector('input[name=\"delay\"]');\nconst inStep = document.querySelector('input[name=\"step\"]');\nconst inAmount = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', submitHandler);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n        // Fulfill\n      } else {\n        reject({position, delay})\n        // Reject\n      }\n    }, delay)\n  });\n}\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","position","delay","addEventListener","submitHandler","Promise","resolve","reject","setTimeout","Math","random","then","Notify","success","catch","warning"],"version":3,"file":"03-promises.5f19bb9f.js.map"}